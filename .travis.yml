language: scala

if: sender != "traviscibot"

before_install:
  - git fetch --tags

stages:
  - name: tests
  - name: release
    if: ((branch = master AND type = push) OR (tag IS present)) AND NOT fork

jobs:
  include:
    - stage: tests
      name: "Scalafmt"
      script: sbt "all scalafmtCheckAll scalafmtSbtCheck"
    - name: "Scalafix"
      script: sbt "scalafixAll --check"
    - name: "Plugin tests"
      script: sbt test
    - stage: release
      env: RELEASE="true"
      script: sbt ci-release mdoc
      before_deploy: mv sbt-fix/target/mdoc/README.md .
      deploy:
        provider: pages
        skip_cleanup: true
        target_branch: master
        github_token: $GITHUB_PERSONAL_ACCESS_TOKEN
        keep_history: true
        on:
          tags: true

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt

before_cache:
  - rm -fv $HOME/.ivy2/.sbt.ivy.lock
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt        -name "*.lock"               -print -delete